name: Playwright Automation Tests
on:
  workflow_call:
    inputs:
      testType:
        description: "Type of test to run (ui or api)"
        required: true
        type: string
      region:
        description: "Region to run tests for (MY or IND)"
        required: false
        default: "MY"
        type: string 
      browser:   # ðŸ‘ˆ add browser as an input
        description: "Browser to run tests on"
        required: false
        default: "msedge"
        type: string
    
jobs:
  notify-job-triggered:
    runs-on: self-hosted
    
    steps:
      - name: Microsoft Teams Notification
        uses: mikesprague/teams-incoming-webhook-action@v1
        with:
          github-token: ${{ github.token }}
          webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
          deploy-card: true
          title: "${{ github.workflow }} started on ${{ github.ref_name }}"
          color: "info"
          timezone: "Asia/Kuala_Lumpur"
  test:
    needs: notify-job-triggered
    timeout-minutes: 60
    runs-on: self-hosted

    env: # ðŸ‘ˆ inject secrets here
      TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      TEST_CLIENTID: ${{ secrets.TEST_CLIENTID }}
      REGION: ${{ inputs.testType == 'UI Tests' && inputs.region || '' }}
      BROWSER: ${{ inputs.browser }}
      
    steps:
      - uses: actions/checkout@v5.0.0
      
      - uses: actions/setup-node@v3.9.1
        with:
          node-version: lts/*
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        
      - name: Run Playwright tests
        continue-on-error: true
        run: npx playwright test --project="${{ inputs.testType }}"

      - name: Prepare Playwright Report Bundle
        run: |
         mkdir -p report-bundle
          cp -r playwright-report/* report-bundle/
          cp -r test-results/* report-bundle/

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-${{ inputs.testType }}-${{ github.run_number }}
          path: report-bundle/
          retention-days: 1


  deploy-report:
    needs: test 
    runs-on: ubuntu-latest  # ðŸ‘ˆ instead of windows-latest
    permissions:
      pages: write
      id-token: write
    env:
      REGION: ${{ inputs.region }}
      
    steps:
       - name: Download report bundle
         uses: actions/download-artifact@v4
         with:
           name: playwright-report-${{ inputs.testType }}-${{ github.run_number }}
           path: report-bundle
           
       - name: Setup Pages
         uses: actions/configure-pages@v5.0.0
    
       - name: Upload Playwright report to GitHub Pages
         uses: actions/upload-pages-artifact@v4.0.0
         with:
           path: report-bundle

       - name: Deploy to GitHub Pages
         id: deployment
         uses: actions/deploy-pages@v4.0.5

        # ðŸ”¹ Step 1: Determine container name
       - name: Determine Container Name
         id: set-container
         run: |
           region="${{ inputs.region }}"
           testType="${{ inputs.testType }}"
           
           # normalize region to lowercase
           region=$(echo "$region" | tr '[:upper:]' '[:lower:]')

           # normalize testType to match container names
           case "$testType" in
             "UI Tests")
               testType="playwrightui"
               ;;
             "API Tests")
               testType="playwrightapi"
               ;;
             *)
               echo "Unknown testType: $testType"
               exit 1
               ;;
           esac

           container="${region}${testType}"
           echo "Using container: $container"
           echo "container=$container" >> $GITHUB_OUTPUT

     # âœ… Step 2: Zip report-bundle folder before upload
       - name: Zip report bundle
         run: |
           cd report-bundle
           zip -r ../report-bundle.zip .
        
     # ðŸ”¹ Step 3: Upload to Azure Blob Storage
       - name: Upload Report to Azure Blob Storage
         run: | 
           az storage blob upload \
             --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
             --account-key ${{ secrets.AZURE_STORAGE_KEY }} \
             --container-name ${{ steps.set-container.outputs.container }} \
             --file report-bundle.zip \
             --name "playwright-report-${{ inputs.testType }}-${{ inputs.region }}-${{ github.run_number }}.zip"
          
       - name: Send failure Microsoft Teams Notification
         uses: mikesprague/teams-incoming-webhook-action@v1
         if: failure()
         with:
           github-token: ${{ github.token }}
           webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
           deploy-card: true
           title: " Error ${{ github.job }} on ${{ github.ref_name }}"
           color: "failure"
           timezone: "Asia/Kuala_Lumpur"
          
       - name: Send Microsoft Teams Notification
         uses: mikesprague/teams-incoming-webhook-action@v1
         with:
           github-token: ${{ github.token }}
           webhook-url: ${{ secrets.TEAMS_WEBHOOK_URL }}
           deploy-card: false
           title: "GitHub Workflow Test Summary [${{ env.REGION }}] - Run #${{ github.run_number }}"
           color: "00FF00"
           timezone: "Asia/Kuala_Lumpur"
           message: |
             **GitHub Actions Test Summary [${{ env.REGION }}]**
             - **Workflow**: ${{ github.workflow }}
             - **Branch**: ${{ github.ref_name }}
             - **Status**: ${{ job.status }}
             - ðŸ“„ **Report**: [Click here to view live report](${{ steps.deployment.outputs.page_url }})
             - ðŸ”— **Workflow Run**: [Click here to download report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
